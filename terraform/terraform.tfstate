{
  "version": 4,
  "terraform_version": "1.3.0",
  "serial": 176,
  "lineage": "9a05f1dc-6ee4-202b-b217-26945de7112c",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "local_file",
      "name": "docker_compose",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "version: '3.7'\nservices:\n  dns:\n    restart: always\n    image: quay.io/poseidon/dnsmasq\n    network_mode: host\n    cap_add:\n      - NET_ADMIN\n    command:\n      - -d\n      - --dhcp-range=192.168.3.101,192.168.3.150\n      - --dhcp-option=1,255.255.255.0\n      - --dhcp-option=3,192.168.3.1\n      - --enable-tftp\n      - --tftp-root=/var/lib/tftpboot\n      - --dhcp-match=set:bios,option:client-arch,0\n      - --dhcp-boot=tag:bios,undionly.kpxe\n      - --dhcp-match=set:efi32,option:client-arch,6\n      - --dhcp-boot=tag:efi32,ipxe.efi\n      - --dhcp-match=set:efibc,option:client-arch,7\n      - --dhcp-boot=tag:efibc,ipxe.efi\n      - --dhcp-match=set:efi64,option:client-arch,9\n      - --dhcp-boot=tag:efi64,ipxe.efi\n      - --dhcp-userclass=set:ipxe,iPXE\n      - --dhcp-boot=tag:ipxe,http://192.168.3.100:8080/boot.ipxe\n      - --log-queries\n      - --log-dhcp\n      - --dhcp-host=12:8d:a7:33:cc:e4,192.168.3.101\n      - --dhcp-host=12:93:4b:39:8b:e7,192.168.3.102\n      - --dhcp-host=12:c2:e1:db:62:03,192.168.3.103\n      - --dhcp-host=12:f4:89:89:0a:34,192.168.3.111\n      - --dhcp-host=12:f3:66:30:06:3b,192.168.3.112\n      - --dhcp-host=12:d5:67:aa:b9:5c,192.168.3.113\n  matchbox:\n    restart: always\n    image: quay.io/poseidon/matchbox:v0.10.0\n    network_mode: host\n    command:\n      - -address=0.0.0.0:8080\n      - -rpc-address=0.0.0.0:8081\n      - -log-level=debug\n    volumes:\n      - /data/volumes/matchbox/var/lib/matchbox:/var/lib/matchbox\n      - /data/volumes/matchbox/etc/matchbox:/etc/matchbox\n",
            "content_base64": null,
            "content_base64sha256": "Jf7A24L+CGQedbqNv2kTkdr02524HaQUSfzZ6o3uUiA=",
            "content_base64sha512": "cw8jpjbkYNjHvphed7aWMj4luTsB4rlG0YOH1lDW3Fk5Xy1Q680cinjYqbue4dLTt1BKwyXWbqxo3PFbNMO3vA==",
            "content_md5": "3f02bcfde80db46d78c4e5ca093cc513",
            "content_sha1": "5d353dd663ca4e924620f012d0f27273cbdb45a7",
            "content_sha256": "25fec0db82fe08641e75ba8dbf691391daf4db9db81da41449fcd9ea8dee5220",
            "content_sha512": "730f23a636e460d8c7be985e77b696323e25b93b01e2b946d18387d650d6dc59395f2d50ebcd1c8a78d8a9bb9ee1d2d3b7504ac325d66eac68dcf15b34c3b7bc",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../docker/docker-compose.yaml",
            "id": "5d353dd663ca4e924620f012d0f27273cbdb45a7",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "master_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": "cp1",
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: u1plwt.v4vt2qif7r7maam5 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNXF0dnlIeE1Ha0s3VFJMUEsxSGU0REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEE1TVRBd05EVTVXaGNOTXpNd05UQTJNVEF3TkRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU1uY2VjUTF4K0VjOGtheTRUNlVpWm90NE5BWVBKUUdCNzZtCnNNU1VWWHh2bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpjdDY0OXhQQUJQeVFXZApQSk5zY29jK3lWNEJNQVVHQXl0bGNBTkJBQjUxS1BUZFFVV2pQMzJtTmg1WkNPZWdRZVNianBWcmprcFVJbHI0CnVKWThkNEhCYjV3MS9WK1Z6eWRCbzAwVTZQVlpTVFBPRXNRSUhvaTJNQzRTZVFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQjdaeEFEOUVXeW53c0gxSy9DN1RXR25mRDdRWTNCSVp3SXNMZ2NQUER3SQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.26.2 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        hostname: cp1 # Used to statically set the hostname for the machine.\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              # Assigns static IP addresses to the interface.\n              addresses:\n                - 192.168.3.101/24\n              # A list of routes associated with the interface.\n              routes:\n                - network: 0.0.0.0/0 # The route's network (destination).\n                  gateway: 192.168.3.1 # The route's gateway (if empty, creates link scope route).\n              mtu: 0 # The interface's MTU.\n              dhcp: false # Indicates if DHCP should be used to configure the interface.\n              # Virtual (shared) IP address configuration.\n              vip:\n                ip: 192.168.3.200 # Specifies the IP address to be used.\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n              #     driver: virtio # Kernel driver, supports matching by wildcard.\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     # A bridge option.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n        # Used to statically set the nameservers for the machine.\n        nameservers:\n            - 8.8.8.8\n            - 8.8.4.4\n        \n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/vda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.3.6 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: true # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 6GRDYbBAXftNkQTZXs5P96dmEuvnVru0ORi9yk253Tc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nVZvzEiNANbL/5fS684XtNN5BZJc13weTIjwQD2a5LM= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.3.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: test-cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        # The CNI used.\n        cni:\n            name: none # Name of CNI to use.\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n    token: q4fx3t.vme58opyjherc247 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: xUSyXjaASRuYle9Fxm++HLyNQ5S3+mJDKL+NeskQb/c= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU4yT3VQK0I1UVBsSmdkSzlSaWRBOTh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTURreE1EQTBOVGxhRncwek16QTFNRFl4TURBMApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNKR004UTh6ZnZEMzFwR3NRTnkyaUFzZmtPS004Ty9MR1BjNEpEeHcyNGgwUGtjcHNscG5SUzMrUHYKNUVMZC9WaEdRUFFCMFNXVXVXOUhGdXVpdnNJcG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRk95MDlZZG9tNG9aUWt6UWNkblBDVS9WamliTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFES01NVWUKM2tFU003RXFjUm9URTk2WjFiVGxqSW1za05MeWlHTWZFSTVCalFJaEFMdVIzeW0zK1gxZGtvdmlnM0R2bysyTQp1b0JmK3c2Tzg3VkNacklESFhZYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUQ0VXh0THJhOWl5NzNtbkppRzZQL1RwUFNBRE9MTCtKWHozSk43SG9MNjBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaVJqUEVQTTM3dzk5YVJyRURjdG9nTEg1RGlqUER2eXhqM09DUThjTnVJZEQ1SEtiSmFaMApVdC9qNytSQzNmMVlSa0QwQWRFbGxMbHZSeGJyb3I3Q0tRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU1hUnJkWkgzT3RjNFM2Q1N1WVNGMmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNRGt4TURBME5UbGFGdzB6TXpBMU1EWXhNREEwTlRsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNYeVhIUS91TGhRTFMyb05pY2xwYWlLeDZYR2dqL29vbGpHMytwT1MvNzZUQ3I4bnJpCjRoM1dBaktTbmUzdndRaXF2N3dSRzhrUVBHczF2VUtaZEdaem8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS0txU2VrcjNTWWMzVDZieE1kWHpJWWJKa2ljTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklGOFhUZi9ldG0yUkljYnNwcmtBNW90UkFjbk1sS1NjTTBudExlcFhjZ2FyQWlFQWlmWDZyVzVHMndXRjZsOEkKYndXcE96RTd5MmJxZUN6MGZOcXJHTDdwUSs0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9aY3NocnFPZVNBcEhLTllDWVFsSWRnR2t6RVc5Z0xDNnF3YnliZUVlUndvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbDhseDBQN2k0VUMwdHFEWW5KYVdvaXNlbHhvSS82S0pZeHQvcVRrdisra3dxL0o2NHVJZAoxZ0l5a3AzdDc4RUlxcis4RVJ2SkVEeHJOYjFDbVhSbWN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtHeEdYMnc1OUhpWmNRK0Z1cnhacXo3N3dFdXJ6dWxaamk0MGhzR3lvRm1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSnEzUEJJY2UwdnRsbUd2UzJjTXloTU05VkR3SU93c3NveDJnZmJTQjhSVUhvQVNWK0tYSAp6RUl5SnIySG12Y2crY2hibXllSUlWcHFMUWV3cFRKdkt3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.26.2 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 192.168.3.200\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.26.2 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        disabled: true # Disable kube-proxy deployment on cluster bootstrap.\n        image: registry.k8s.io/kube-proxy:v1.26.2 # The container image used in the kube-proxy manifest.\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.26.2 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNPZ0F3SUJBZ0lRYkRhWjA2aFBCRDVHeW54NGVSN2pFakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEl6TURVd09URXdNRFExT1ZvWERUTXpNRFV3TmpFd01EUTFPVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkMyc2ZiNGR6U1h0CnNGNndpS0ZtRThzMzgvVm5YVHFnaWFwL0dnMnhGa2NjTVg5cCtDdWVRdDZqd09HQ1JLUG9Fc3pBMjB3M0UyUE0KMkk3M0ZzRHhtd0dqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMnBka3R4RlpwV2xPCnYrYXgxTk1OZTQwTitwa3dDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdEZFRXc1JSRndCWW41Wlkrb0tmTWVFU2IKSGlQbU9ZNExDYkFZZU51WXRyUUNJRFF5dDVncG5LR3ZNaUZLQ1RoNTNtS05Xdk5wWW5saWRYV3ZyeFZLRWdkSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5ST21naVBYMFNCSXNvM3FESk82ZFFiYWRSVEQ0TnRHd0FhakJwOXdwVnNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTGF4OXZoM05KZTJ3WHJDSW9XWVR5emZ6OVdkZE9xQ0pxbjhhRGJFV1J4d3hmMm40SzU1QwozcVBBNFlKRW8rZ1N6TURiVERjVFk4ellqdmNXd1BHYkFRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.7\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": null,
            "content_base64sha256": "TF7zQVxJ/0jCYntMT2i4POd49VoAO+pkukVBDUr5oD0=",
            "content_base64sha512": "5hz+Myer6Ruxs02ELPZjM+iuozwN+07UGN+3IuvEchd38mYDkrYju5VyfRZSjsISKN3FPL9kVianr4z2iyerTA==",
            "content_md5": "86598e3b8a611ba9f9a379beafe1ebfe",
            "content_sha1": "a54d1e05e03d348306ecfde5a0fe8a0188b96e77",
            "content_sha256": "4c5ef3415c49ff48c2627b4c4f68b83ce778f55a003bea64ba45410d4af9a03d",
            "content_sha512": "e61cfe3327abe91bb1b34d842cf66333e8aea33c0dfb4ed418dfb722ebc4721777f2660392b623bb95727d16528ec21228ddc53cbf645626a7af8cf68b27ab4c",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../config/cp1.yaml",
            "id": "a54d1e05e03d348306ecfde5a0fe8a0188b96e77",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "cp2",
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: u1plwt.v4vt2qif7r7maam5 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNXF0dnlIeE1Ha0s3VFJMUEsxSGU0REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEE1TVRBd05EVTVXaGNOTXpNd05UQTJNVEF3TkRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU1uY2VjUTF4K0VjOGtheTRUNlVpWm90NE5BWVBKUUdCNzZtCnNNU1VWWHh2bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpjdDY0OXhQQUJQeVFXZApQSk5zY29jK3lWNEJNQVVHQXl0bGNBTkJBQjUxS1BUZFFVV2pQMzJtTmg1WkNPZWdRZVNianBWcmprcFVJbHI0CnVKWThkNEhCYjV3MS9WK1Z6eWRCbzAwVTZQVlpTVFBPRXNRSUhvaTJNQzRTZVFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQjdaeEFEOUVXeW53c0gxSy9DN1RXR25mRDdRWTNCSVp3SXNMZ2NQUER3SQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.26.2 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        hostname: cp2 # Used to statically set the hostname for the machine.\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              # Assigns static IP addresses to the interface.\n              addresses:\n                - 192.168.3.102/24\n              # A list of routes associated with the interface.\n              routes:\n                - network: 0.0.0.0/0 # The route's network (destination).\n                  gateway: 192.168.3.1 # The route's gateway (if empty, creates link scope route).\n              mtu: 0 # The interface's MTU.\n              dhcp: false # Indicates if DHCP should be used to configure the interface.\n              # Virtual (shared) IP address configuration.\n              vip:\n                ip: 192.168.3.200 # Specifies the IP address to be used.\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n              #     driver: virtio # Kernel driver, supports matching by wildcard.\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     # A bridge option.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n        # Used to statically set the nameservers for the machine.\n        nameservers:\n            - 8.8.8.8\n            - 8.8.4.4\n        \n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/vda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.3.6 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: true # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 6GRDYbBAXftNkQTZXs5P96dmEuvnVru0ORi9yk253Tc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nVZvzEiNANbL/5fS684XtNN5BZJc13weTIjwQD2a5LM= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.3.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: test-cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        # The CNI used.\n        cni:\n            name: none # Name of CNI to use.\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n    token: q4fx3t.vme58opyjherc247 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: xUSyXjaASRuYle9Fxm++HLyNQ5S3+mJDKL+NeskQb/c= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU4yT3VQK0I1UVBsSmdkSzlSaWRBOTh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTURreE1EQTBOVGxhRncwek16QTFNRFl4TURBMApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNKR004UTh6ZnZEMzFwR3NRTnkyaUFzZmtPS004Ty9MR1BjNEpEeHcyNGgwUGtjcHNscG5SUzMrUHYKNUVMZC9WaEdRUFFCMFNXVXVXOUhGdXVpdnNJcG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRk95MDlZZG9tNG9aUWt6UWNkblBDVS9WamliTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFES01NVWUKM2tFU003RXFjUm9URTk2WjFiVGxqSW1za05MeWlHTWZFSTVCalFJaEFMdVIzeW0zK1gxZGtvdmlnM0R2bysyTQp1b0JmK3c2Tzg3VkNacklESFhZYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUQ0VXh0THJhOWl5NzNtbkppRzZQL1RwUFNBRE9MTCtKWHozSk43SG9MNjBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaVJqUEVQTTM3dzk5YVJyRURjdG9nTEg1RGlqUER2eXhqM09DUThjTnVJZEQ1SEtiSmFaMApVdC9qNytSQzNmMVlSa0QwQWRFbGxMbHZSeGJyb3I3Q0tRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU1hUnJkWkgzT3RjNFM2Q1N1WVNGMmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNRGt4TURBME5UbGFGdzB6TXpBMU1EWXhNREEwTlRsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNYeVhIUS91TGhRTFMyb05pY2xwYWlLeDZYR2dqL29vbGpHMytwT1MvNzZUQ3I4bnJpCjRoM1dBaktTbmUzdndRaXF2N3dSRzhrUVBHczF2VUtaZEdaem8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS0txU2VrcjNTWWMzVDZieE1kWHpJWWJKa2ljTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklGOFhUZi9ldG0yUkljYnNwcmtBNW90UkFjbk1sS1NjTTBudExlcFhjZ2FyQWlFQWlmWDZyVzVHMndXRjZsOEkKYndXcE96RTd5MmJxZUN6MGZOcXJHTDdwUSs0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9aY3NocnFPZVNBcEhLTllDWVFsSWRnR2t6RVc5Z0xDNnF3YnliZUVlUndvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbDhseDBQN2k0VUMwdHFEWW5KYVdvaXNlbHhvSS82S0pZeHQvcVRrdisra3dxL0o2NHVJZAoxZ0l5a3AzdDc4RUlxcis4RVJ2SkVEeHJOYjFDbVhSbWN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtHeEdYMnc1OUhpWmNRK0Z1cnhacXo3N3dFdXJ6dWxaamk0MGhzR3lvRm1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSnEzUEJJY2UwdnRsbUd2UzJjTXloTU05VkR3SU93c3NveDJnZmJTQjhSVUhvQVNWK0tYSAp6RUl5SnIySG12Y2crY2hibXllSUlWcHFMUWV3cFRKdkt3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.26.2 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 192.168.3.200\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.26.2 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        disabled: true # Disable kube-proxy deployment on cluster bootstrap.\n        image: registry.k8s.io/kube-proxy:v1.26.2 # The container image used in the kube-proxy manifest.\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.26.2 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNPZ0F3SUJBZ0lRYkRhWjA2aFBCRDVHeW54NGVSN2pFakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEl6TURVd09URXdNRFExT1ZvWERUTXpNRFV3TmpFd01EUTFPVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkMyc2ZiNGR6U1h0CnNGNndpS0ZtRThzMzgvVm5YVHFnaWFwL0dnMnhGa2NjTVg5cCtDdWVRdDZqd09HQ1JLUG9Fc3pBMjB3M0UyUE0KMkk3M0ZzRHhtd0dqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMnBka3R4RlpwV2xPCnYrYXgxTk1OZTQwTitwa3dDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdEZFRXc1JSRndCWW41Wlkrb0tmTWVFU2IKSGlQbU9ZNExDYkFZZU51WXRyUUNJRFF5dDVncG5LR3ZNaUZLQ1RoNTNtS05Xdk5wWW5saWRYV3ZyeFZLRWdkSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5ST21naVBYMFNCSXNvM3FESk82ZFFiYWRSVEQ0TnRHd0FhakJwOXdwVnNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTGF4OXZoM05KZTJ3WHJDSW9XWVR5emZ6OVdkZE9xQ0pxbjhhRGJFV1J4d3hmMm40SzU1QwozcVBBNFlKRW8rZ1N6TURiVERjVFk4ellqdmNXd1BHYkFRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.7\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": null,
            "content_base64sha256": "NagDPpKvLJ/1y65QWw+YLgCZxNLLgtAMOk21R1jskFA=",
            "content_base64sha512": "UpWFu27DiMMFg3N+iMm/gELNgF8nJKNSMvUpyj7cwkDLWFXahETUiIcNS+iFdZvTHF36/+/cIjaWMrAgQdz4qw==",
            "content_md5": "ae3bcd66bde36cd4c6eff43a5faab501",
            "content_sha1": "8839657ad82bad9497e4e4cdb1b09cf752600024",
            "content_sha256": "35a8033e92af2c9ff5cbae505b0f982e0099c4d2cb82d00c3a4db54758ec9050",
            "content_sha512": "529585bb6ec388c30583737e88c9bf8042cd805f2724a35232f529ca3edcc240cb5855da8444d488870d4be885759bd31c5dfaffefdc22369632b02041dcf8ab",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../config/cp2.yaml",
            "id": "8839657ad82bad9497e4e4cdb1b09cf752600024",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "cp3",
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: u1plwt.v4vt2qif7r7maam5 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNXF0dnlIeE1Ha0s3VFJMUEsxSGU0REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEE1TVRBd05EVTVXaGNOTXpNd05UQTJNVEF3TkRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU1uY2VjUTF4K0VjOGtheTRUNlVpWm90NE5BWVBKUUdCNzZtCnNNU1VWWHh2bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpjdDY0OXhQQUJQeVFXZApQSk5zY29jK3lWNEJNQVVHQXl0bGNBTkJBQjUxS1BUZFFVV2pQMzJtTmg1WkNPZWdRZVNianBWcmprcFVJbHI0CnVKWThkNEhCYjV3MS9WK1Z6eWRCbzAwVTZQVlpTVFBPRXNRSUhvaTJNQzRTZVFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJQjdaeEFEOUVXeW53c0gxSy9DN1RXR25mRDdRWTNCSVp3SXNMZ2NQUER3SQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.26.2 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        hostname: cp3 # Used to statically set the hostname for the machine.\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              # Assigns static IP addresses to the interface.\n              addresses:\n                - 192.168.3.103/24\n              # A list of routes associated with the interface.\n              routes:\n                - network: 0.0.0.0/0 # The route's network (destination).\n                  gateway: 192.168.3.1 # The route's gateway (if empty, creates link scope route).\n              mtu: 0 # The interface's MTU.\n              dhcp: false # Indicates if DHCP should be used to configure the interface.\n              # Virtual (shared) IP address configuration.\n              vip:\n                ip: 192.168.3.200 # Specifies the IP address to be used.\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n              #     driver: virtio # Kernel driver, supports matching by wildcard.\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     # A bridge option.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n        # Used to statically set the nameservers for the machine.\n        nameservers:\n            - 8.8.8.8\n            - 8.8.4.4\n        \n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/vda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.3.6 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: true # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 6GRDYbBAXftNkQTZXs5P96dmEuvnVru0ORi9yk253Tc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nVZvzEiNANbL/5fS684XtNN5BZJc13weTIjwQD2a5LM= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.3.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: test-cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        # The CNI used.\n        cni:\n            name: none # Name of CNI to use.\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n    token: q4fx3t.vme58opyjherc247 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: xUSyXjaASRuYle9Fxm++HLyNQ5S3+mJDKL+NeskQb/c= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU4yT3VQK0I1UVBsSmdkSzlSaWRBOTh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTURreE1EQTBOVGxhRncwek16QTFNRFl4TURBMApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNKR004UTh6ZnZEMzFwR3NRTnkyaUFzZmtPS004Ty9MR1BjNEpEeHcyNGgwUGtjcHNscG5SUzMrUHYKNUVMZC9WaEdRUFFCMFNXVXVXOUhGdXVpdnNJcG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRk95MDlZZG9tNG9aUWt6UWNkblBDVS9WamliTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFES01NVWUKM2tFU003RXFjUm9URTk2WjFiVGxqSW1za05MeWlHTWZFSTVCalFJaEFMdVIzeW0zK1gxZGtvdmlnM0R2bysyTQp1b0JmK3c2Tzg3VkNacklESFhZYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUQ0VXh0THJhOWl5NzNtbkppRzZQL1RwUFNBRE9MTCtKWHozSk43SG9MNjBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaVJqUEVQTTM3dzk5YVJyRURjdG9nTEg1RGlqUER2eXhqM09DUThjTnVJZEQ1SEtiSmFaMApVdC9qNytSQzNmMVlSa0QwQWRFbGxMbHZSeGJyb3I3Q0tRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU1hUnJkWkgzT3RjNFM2Q1N1WVNGMmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNRGt4TURBME5UbGFGdzB6TXpBMU1EWXhNREEwTlRsYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVNYeVhIUS91TGhRTFMyb05pY2xwYWlLeDZYR2dqL29vbGpHMytwT1MvNzZUQ3I4bnJpCjRoM1dBaktTbmUzdndRaXF2N3dSRzhrUVBHczF2VUtaZEdaem8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGS0txU2VrcjNTWWMzVDZieE1kWHpJWWJKa2ljTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklGOFhUZi9ldG0yUkljYnNwcmtBNW90UkFjbk1sS1NjTTBudExlcFhjZ2FyQWlFQWlmWDZyVzVHMndXRjZsOEkKYndXcE96RTd5MmJxZUN6MGZOcXJHTDdwUSs0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU9aY3NocnFPZVNBcEhLTllDWVFsSWRnR2t6RVc5Z0xDNnF3YnliZUVlUndvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFbDhseDBQN2k0VUMwdHFEWW5KYVdvaXNlbHhvSS82S0pZeHQvcVRrdisra3dxL0o2NHVJZAoxZ0l5a3AzdDc4RUlxcis4RVJ2SkVEeHJOYjFDbVhSbWN3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUtHeEdYMnc1OUhpWmNRK0Z1cnhacXo3N3dFdXJ6dWxaamk0MGhzR3lvRm1vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSnEzUEJJY2UwdnRsbUd2UzJjTXloTU05VkR3SU93c3NveDJnZmJTQjhSVUhvQVNWK0tYSAp6RUl5SnIySG12Y2crY2hibXllSUlWcHFMUWV3cFRKdkt3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.26.2 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 192.168.3.200\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.26.2 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        disabled: true # Disable kube-proxy deployment on cluster bootstrap.\n        image: registry.k8s.io/kube-proxy:v1.26.2 # The container image used in the kube-proxy manifest.\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.26.2 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmRENDQVNPZ0F3SUJBZ0lRYkRhWjA2aFBCRDVHeW54NGVSN2pFakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEl6TURVd09URXdNRFExT1ZvWERUTXpNRFV3TmpFd01EUTFPVm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkMyc2ZiNGR6U1h0CnNGNndpS0ZtRThzMzgvVm5YVHFnaWFwL0dnMnhGa2NjTVg5cCtDdWVRdDZqd09HQ1JLUG9Fc3pBMjB3M0UyUE0KMkk3M0ZzRHhtd0dqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMnBka3R4RlpwV2xPCnYrYXgxTk1OZTQwTitwa3dDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdEZFRXc1JSRndCWW41Wlkrb0tmTWVFU2IKSGlQbU9ZNExDYkFZZU51WXRyUUNJRFF5dDVncG5LR3ZNaUZLQ1RoNTNtS05Xdk5wWW5saWRYV3ZyeFZLRWdkSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5ST21naVBYMFNCSXNvM3FESk82ZFFiYWRSVEQ0TnRHd0FhakJwOXdwVnNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTGF4OXZoM05KZTJ3WHJDSW9XWVR5emZ6OVdkZE9xQ0pxbjhhRGJFV1J4d3hmMm40SzU1QwozcVBBNFlKRW8rZ1N6TURiVERjVFk4ellqdmNXd1BHYkFRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.7\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": null,
            "content_base64sha256": "ToJwFQ5rHgF6WJdWqEjSJnuYUUjBBuIJEs8O6YszQf0=",
            "content_base64sha512": "3puNcXtz9p0fgjjSuOwaPbC3+vBgcFPbFDIv5PflbS0+ZJOvpPN0yrMGjfgvluMZqVRCdhkAHueDOigFuiJyVw==",
            "content_md5": "868038bfb2ebf262f708f02b10df9dda",
            "content_sha1": "c8698d6165989e42b46ff1a2db27d7c4ca6c8a1b",
            "content_sha256": "4e8270150e6b1e017a589756a848d2267b985148c106e20912cf0ee98b3341fd",
            "content_sha512": "de9b8d717b73f69d1f8238d2b8ec1a3db0b7faf0607053db14322fe4f7e56d2d3e6493afa4f374cab3068df82f96e319a954427619001ee7833a2805ba227257",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../config/cp3.yaml",
            "id": "c8698d6165989e42b46ff1a2db27d7c4ca6c8a1b",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "workers_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": "wr1",
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: u1plwt.v4vt2qif7r7maam5 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNXF0dnlIeE1Ha0s3VFJMUEsxSGU0REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEE1TVRBd05EVTVXaGNOTXpNd05UQTJNVEF3TkRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU1uY2VjUTF4K0VjOGtheTRUNlVpWm90NE5BWVBKUUdCNzZtCnNNU1VWWHh2bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpjdDY0OXhQQUJQeVFXZApQSk5zY29jK3lWNEJNQVVHQXl0bGNBTkJBQjUxS1BUZFFVV2pQMzJtTmg1WkNPZWdRZVNianBWcmprcFVJbHI0CnVKWThkNEhCYjV3MS9WK1Z6eWRCbzAwVTZQVlpTVFBPRXNRSUhvaTJNQzRTZVFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.26.2 # The `image` field is an optional reference to an alternative kubelet image.\n        # The `extraArgs` field is used to provide additional flags to the kubelet.\n        extraArgs:\n            node-labels: custom-csi=linstor, openebs.io/engine=mayastor\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        hostname: wr1 # Used to statically set the hostname for the machine.\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              # Assigns static IP addresses to the interface.\n              addresses:\n                - 192.168.3.111/24\n              # A list of routes associated with the interface.\n              routes:\n                - network: 0.0.0.0/0 # The route's network (destination).\n                  gateway: 192.168.3.1 # The route's gateway (if empty, creates link scope route).\n              mtu: 0 # The interface's MTU.\n              dhcp: false # Indicates if DHCP should be used to configure the interface.\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n              #     driver: virtio # Kernel driver, supports matching by wildcard.\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     # A bridge option.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n\n              # # Virtual (shared) IP address configuration.\n\n              # # layer2 vip example\n              # vip:\n              #     ip: 172.16.199.55 # Specifies the IP address to be used.\n        # Used to statically set the nameservers for the machine.\n        nameservers:\n            - 8.8.8.8\n            - 8.8.4.4\n        \n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to partition, format and mount additional disks.\n    disks:\n        - device: /dev/vdb # The name of the disk to use.\n          # A list of partitions to create on the disk.\n          partitions:\n            - mountpoint: /var/mnt/local # Where to mount the partition.\n              \n              # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n              # # Human readable representation.\n              # size: 100 MB\n              # # Precise value in bytes.\n              # size: 1073741824\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/vda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.3.6 # Allows for supplying the image used to perform the installation.\n        # Allows for supplying additional system extension images to install on top of base Talos image.\n        extensions:\n            - image: ghcr.io/siderolabs/drbd:9.2.0-v1.3.6 # System extension image.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: true # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Used to configure the machine's sysctls.\n    sysctls:\n        vm.nr_hugepages: \"1024\"\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    # Configures the kernel.\n    kernel:\n        # Kernel modules to load.\n        modules:\n            - name: drbd # Module name.\n              # Module parameters, changes applied after reboot.\n              parameters:\n                - usermode_helper=disabled\n            - name: drbd_transport_tcp # Module name.\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 6GRDYbBAXftNkQTZXs5P96dmEuvnVru0ORi9yk253Tc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nVZvzEiNANbL/5fS684XtNN5BZJc13weTIjwQD2a5LM= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.3.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        # The CNI used.\n        cni:\n            name: none # Name of CNI to use.\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n    token: q4fx3t.vme58opyjherc247 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU4yT3VQK0I1UVBsSmdkSzlSaWRBOTh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTURreE1EQTBOVGxhRncwek16QTFNRFl4TURBMApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNKR004UTh6ZnZEMzFwR3NRTnkyaUFzZmtPS004Ty9MR1BjNEpEeHcyNGgwUGtjcHNscG5SUzMrUHYKNUVMZC9WaEdRUFFCMFNXVXVXOUhGdXVpdnNJcG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRk95MDlZZG9tNG9aUWt6UWNkblBDVS9WamliTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFES01NVWUKM2tFU003RXFjUm9URTk2WjFiVGxqSW1za05MeWlHTWZFSTVCalFJaEFMdVIzeW0zK1gxZGtvdmlnM0R2bysyTQp1b0JmK3c2Tzg3VkNacklESFhZYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Kube-proxy server-specific configuration options\n    proxy:\n        disabled: true # Disable kube-proxy deployment on cluster bootstrap.\n        \n        # # The container image used in the kube-proxy manifest.\n        # image: registry.k8s.io/kube-proxy:v1.26.2\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.26.2 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.26.2 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.26.2 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.7 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": null,
            "content_base64sha256": "u6y0TRtcAcYieACmycX6rN6X59TangAYK9zXibcQuoU=",
            "content_base64sha512": "jdGpWfU/aHLgTMd9JbqlU49mUik16T/O1jKX5hHNwKbdw6dFNmHVwHk7PLBKJZAAUoJ3th9EdfJRM+X6PXI5iA==",
            "content_md5": "95ac9f6ff3024481aa32f29a456bad73",
            "content_sha1": "fac1a9ba149f1ccdcdea9ca5be2b9684193eca1c",
            "content_sha256": "bbacb44d1b5c01c6227800a6c9c5faacde97e7d4da9e00182bdcd789b710ba85",
            "content_sha512": "8dd1a959f53f6872e04cc77d25baa5538f66522935e93fced63297e611cdc0a6ddc3a7453661d5c0793b3cb04a259000528277b61f4475f25133e5fa3d723988",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../config/wr1.yaml",
            "id": "fac1a9ba149f1ccdcdea9ca5be2b9684193eca1c",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "wr2",
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: u1plwt.v4vt2qif7r7maam5 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNXF0dnlIeE1Ha0s3VFJMUEsxSGU0REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEE1TVRBd05EVTVXaGNOTXpNd05UQTJNVEF3TkRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU1uY2VjUTF4K0VjOGtheTRUNlVpWm90NE5BWVBKUUdCNzZtCnNNU1VWWHh2bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpjdDY0OXhQQUJQeVFXZApQSk5zY29jK3lWNEJNQVVHQXl0bGNBTkJBQjUxS1BUZFFVV2pQMzJtTmg1WkNPZWdRZVNianBWcmprcFVJbHI0CnVKWThkNEhCYjV3MS9WK1Z6eWRCbzAwVTZQVlpTVFBPRXNRSUhvaTJNQzRTZVFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.26.2 # The `image` field is an optional reference to an alternative kubelet image.\n        # The `extraArgs` field is used to provide additional flags to the kubelet.\n        extraArgs:\n            node-labels: custom-csi=linstor, openebs.io/engine=mayastor\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        hostname: wr2 # Used to statically set the hostname for the machine.\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              # Assigns static IP addresses to the interface.\n              addresses:\n                - 192.168.3.112/24\n              # A list of routes associated with the interface.\n              routes:\n                - network: 0.0.0.0/0 # The route's network (destination).\n                  gateway: 192.168.3.1 # The route's gateway (if empty, creates link scope route).\n              mtu: 0 # The interface's MTU.\n              dhcp: false # Indicates if DHCP should be used to configure the interface.\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n              #     driver: virtio # Kernel driver, supports matching by wildcard.\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     # A bridge option.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n\n              # # Virtual (shared) IP address configuration.\n\n              # # layer2 vip example\n              # vip:\n              #     ip: 172.16.199.55 # Specifies the IP address to be used.\n        # Used to statically set the nameservers for the machine.\n        nameservers:\n            - 8.8.8.8\n            - 8.8.4.4\n        \n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to partition, format and mount additional disks.\n    disks:\n        - device: /dev/vdb # The name of the disk to use.\n          # A list of partitions to create on the disk.\n          partitions:\n            - mountpoint: /var/mnt/local # Where to mount the partition.\n              \n              # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n              # # Human readable representation.\n              # size: 100 MB\n              # # Precise value in bytes.\n              # size: 1073741824\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/vda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.3.6 # Allows for supplying the image used to perform the installation.\n        # Allows for supplying additional system extension images to install on top of base Talos image.\n        extensions:\n            - image: ghcr.io/siderolabs/drbd:9.2.0-v1.3.6 # System extension image.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: true # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Used to configure the machine's sysctls.\n    sysctls:\n        vm.nr_hugepages: \"1024\"\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    # Configures the kernel.\n    kernel:\n        # Kernel modules to load.\n        modules:\n            - name: drbd # Module name.\n              # Module parameters, changes applied after reboot.\n              parameters:\n                - usermode_helper=disabled\n            - name: drbd_transport_tcp # Module name.\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 6GRDYbBAXftNkQTZXs5P96dmEuvnVru0ORi9yk253Tc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nVZvzEiNANbL/5fS684XtNN5BZJc13weTIjwQD2a5LM= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.3.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        # The CNI used.\n        cni:\n            name: none # Name of CNI to use.\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n    token: q4fx3t.vme58opyjherc247 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU4yT3VQK0I1UVBsSmdkSzlSaWRBOTh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTURreE1EQTBOVGxhRncwek16QTFNRFl4TURBMApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNKR004UTh6ZnZEMzFwR3NRTnkyaUFzZmtPS004Ty9MR1BjNEpEeHcyNGgwUGtjcHNscG5SUzMrUHYKNUVMZC9WaEdRUFFCMFNXVXVXOUhGdXVpdnNJcG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRk95MDlZZG9tNG9aUWt6UWNkblBDVS9WamliTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFES01NVWUKM2tFU003RXFjUm9URTk2WjFiVGxqSW1za05MeWlHTWZFSTVCalFJaEFMdVIzeW0zK1gxZGtvdmlnM0R2bysyTQp1b0JmK3c2Tzg3VkNacklESFhZYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Kube-proxy server-specific configuration options\n    proxy:\n        disabled: true # Disable kube-proxy deployment on cluster bootstrap.\n        \n        # # The container image used in the kube-proxy manifest.\n        # image: registry.k8s.io/kube-proxy:v1.26.2\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.26.2 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.26.2 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.26.2 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.7 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": null,
            "content_base64sha256": "E4FDlKsgFjjNg9geCnAbGIZhaxQWsuHUauEOXPsDexM=",
            "content_base64sha512": "yc6afhmPq3NHN9aBNfM/l7QdQ2oQDlBJ4KNoRIhkNt5xswddpUzv5Q69ii1KPb3Kz60ZTcMgFwzo3Qts7Q6e5A==",
            "content_md5": "531824017116bd6e47d901f5af6368c4",
            "content_sha1": "04a1a27f81d63065d45b33e0c6551f67e3c6e220",
            "content_sha256": "13814394ab201638cd83d81e0a701b1886616b1416b2e1d46ae10e5cfb037b13",
            "content_sha512": "c9ce9a7e198fab734737d68135f33f97b41d436a100e5049e0a36844886436de71b3075da54cefe50ebd8a2d4a3dbdcacfad194dc320170ce8dd0b6ced0e9ee4",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../config/wr2.yaml",
            "id": "04a1a27f81d63065d45b33e0c6551f67e3c6e220",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "wr3",
          "schema_version": 0,
          "attributes": {
            "content": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: u1plwt.v4vt2qif7r7maam5 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBNXF0dnlIeE1Ha0s3VFJMUEsxSGU0REFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qTXdOVEE1TVRBd05EVTVXaGNOTXpNd05UQTJNVEF3TkRVNVdqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQU1uY2VjUTF4K0VjOGtheTRUNlVpWm90NE5BWVBKUUdCNzZtCnNNU1VWWHh2bzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkpjdDY0OXhQQUJQeVFXZApQSk5zY29jK3lWNEJNQVVHQXl0bGNBTkJBQjUxS1BUZFFVV2pQMzJtTmg1WkNPZWdRZVNianBWcmprcFVJbHI0CnVKWThkNEhCYjV3MS9WK1Z6eWRCbzAwVTZQVlpTVFBPRXNRSUhvaTJNQzRTZVFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.26.2 # The `image` field is an optional reference to an alternative kubelet image.\n        # The `extraArgs` field is used to provide additional flags to the kubelet.\n        extraArgs:\n            node-labels: custom-csi=linstor, openebs.io/engine=mayastor\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        hostname: wr3 # Used to statically set the hostname for the machine.\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              # Assigns static IP addresses to the interface.\n              addresses:\n                - 192.168.3.113/24\n              # A list of routes associated with the interface.\n              routes:\n                - network: 0.0.0.0/0 # The route's network (destination).\n                  gateway: 192.168.3.1 # The route's gateway (if empty, creates link scope route).\n              mtu: 0 # The interface's MTU.\n              dhcp: false # Indicates if DHCP should be used to configure the interface.\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n              #     driver: virtio # Kernel driver, supports matching by wildcard.\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - eth0\n              #         - eth1\n              #     # A bridge option.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n\n              # # Virtual (shared) IP address configuration.\n\n              # # layer2 vip example\n              # vip:\n              #     ip: 172.16.199.55 # Specifies the IP address to be used.\n        # Used to statically set the nameservers for the machine.\n        nameservers:\n            - 8.8.8.8\n            - 8.8.4.4\n        \n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to partition, format and mount additional disks.\n    disks:\n        - device: /dev/vdb # The name of the disk to use.\n          # A list of partitions to create on the disk.\n          partitions:\n            - mountpoint: /var/mnt/local # Where to mount the partition.\n              \n              # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n              # # Human readable representation.\n              # size: 100 MB\n              # # Precise value in bytes.\n              # size: 1073741824\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/vda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.3.6 # Allows for supplying the image used to perform the installation.\n        # Allows for supplying additional system extension images to install on top of base Talos image.\n        extensions:\n            - image: ghcr.io/siderolabs/drbd:9.2.0-v1.3.6 # System extension image.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: true # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Used to configure the machine's sysctls.\n    sysctls:\n        vm.nr_hugepages: \"1024\"\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    # Configures the kernel.\n    kernel:\n        # Kernel modules to load.\n        modules:\n            - name: drbd # Module name.\n              # Module parameters, changes applied after reboot.\n              parameters:\n                - usermode_helper=disabled\n            - name: drbd_transport_tcp # Module name.\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # Specifies time (NTP) servers to use for setting the system time.\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: 6GRDYbBAXftNkQTZXs5P96dmEuvnVru0ORi9yk253Tc= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: nVZvzEiNANbL/5fS684XtNN5BZJc13weTIjwQD2a5LM= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://192.168.3.200:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        # The CNI used.\n        cni:\n            name: none # Name of CNI to use.\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n    token: q4fx3t.vme58opyjherc247 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpekNDQVRDZ0F3SUJBZ0lSQU4yT3VQK0I1UVBsSmdkSzlSaWRBOTh3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlNekExTURreE1EQTBOVGxhRncwek16QTFNRFl4TURBMApOVGxhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVNKR004UTh6ZnZEMzFwR3NRTnkyaUFzZmtPS004Ty9MR1BjNEpEeHcyNGgwUGtjcHNscG5SUzMrUHYKNUVMZC9WaEdRUFFCMFNXVXVXOUhGdXVpdnNJcG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGRk95MDlZZG9tNG9aUWt6UWNkblBDVS9WamliTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDSVFES01NVWUKM2tFU003RXFjUm9URTk2WjFiVGxqSW1za05MeWlHTWZFSTVCalFJaEFMdVIzeW0zK1gxZGtvdmlnM0R2bysyTQp1b0JmK3c2Tzg3VkNacklESFhZYgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Kube-proxy server-specific configuration options\n    proxy:\n        disabled: true # Disable kube-proxy deployment on cluster bootstrap.\n        \n        # # The container image used in the kube-proxy manifest.\n        # image: registry.k8s.io/kube-proxy:v1.26.2\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.26.2 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.26.2 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.26.2 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.7 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.0 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "content_base64": null,
            "content_base64sha256": "6ACFQxf+VBRfaEP9YusnNnidfflPEJvvwVod7mv6GCM=",
            "content_base64sha512": "QGG/QQRwxO+Yr6TgSV3B2ASVhfWNUG3I7F0UvM2/WfsaUK+r3b4D9dlRc3L0PnYBl+WjG1eYk/VvGbdieRAZSw==",
            "content_md5": "8f3f2dd714740caa5bc02dd8b027e0e6",
            "content_sha1": "9c3ff1c8c72cb240a258eb576f756786ad97f248",
            "content_sha256": "e800854317fe54145f6843fd62eb2736789d7df94f109befc15a1dee6bfa1823",
            "content_sha512": "4061bf410470c4ef98afa4e0495dc1d8049585f58d506dc8ec5d14bccdbf59fb1a50afabddbe03f5d9517372f43e760197e5a31b579893f56f19b7627910194b",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../config/wr3.yaml",
            "id": "9c3ff1c8c72cb240a258eb576f756786ad97f248",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "matchbox_group",
      "name": "controlplanes",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": "cp1",
          "schema_version": 0,
          "attributes": {
            "id": "cp1",
            "metadata": null,
            "name": "cp1",
            "profile": "cp1",
            "selector": {
              "mac": "12:8d:a7:33:cc:e4"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "cp2",
          "schema_version": 0,
          "attributes": {
            "id": "cp2",
            "metadata": null,
            "name": "cp2",
            "profile": "cp2",
            "selector": {
              "mac": "12:93:4b:39:8b:e7"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "cp3",
          "schema_version": 0,
          "attributes": {
            "id": "cp3",
            "metadata": null,
            "name": "cp3",
            "profile": "cp3",
            "selector": {
              "mac": "12:c2:e1:db:62:03"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "matchbox_group",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": "wr1",
          "schema_version": 0,
          "attributes": {
            "id": "wr1",
            "metadata": null,
            "name": "wr1",
            "profile": "wr1",
            "selector": {
              "mac": "12:f4:89:89:0a:34"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "wr2",
          "schema_version": 0,
          "attributes": {
            "id": "wr2",
            "metadata": null,
            "name": "wr2",
            "profile": "wr2",
            "selector": {
              "mac": "12:f3:66:30:06:3b"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "wr3",
          "schema_version": 0,
          "attributes": {
            "id": "wr3",
            "metadata": null,
            "name": "wr3",
            "profile": "wr3",
            "selector": {
              "mac": "12:d5:67:aa:b9:5c"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "matchbox_profile",
      "name": "controlplanes",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": "cp1",
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=initramfs.xz",
              "init_on_alloc=1",
              "slab_nomerge",
              "pti=on",
              "console=tty0",
              "console=ttyS0",
              "printk.devkmsg=on",
              "talos.platform=metal",
              "talos.config=http://192.168.3.100:8080/assets/cp1.yaml"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "cp1",
            "initrd": [
              "/assets/initramfs.xz"
            ],
            "kernel": "/assets/vmlinuz",
            "name": "cp1",
            "raw_ignition": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "cp2",
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=initramfs.xz",
              "init_on_alloc=1",
              "slab_nomerge",
              "pti=on",
              "console=tty0",
              "console=ttyS0",
              "printk.devkmsg=on",
              "talos.platform=metal",
              "talos.config=http://192.168.3.100:8080/assets/cp2.yaml"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "cp2",
            "initrd": [
              "/assets/initramfs.xz"
            ],
            "kernel": "/assets/vmlinuz",
            "name": "cp2",
            "raw_ignition": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "cp3",
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=initramfs.xz",
              "init_on_alloc=1",
              "slab_nomerge",
              "pti=on",
              "console=tty0",
              "console=ttyS0",
              "printk.devkmsg=on",
              "talos.platform=metal",
              "talos.config=http://192.168.3.100:8080/assets/cp3.yaml"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "cp3",
            "initrd": [
              "/assets/initramfs.xz"
            ],
            "kernel": "/assets/vmlinuz",
            "name": "cp3",
            "raw_ignition": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "matchbox_profile",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": "wr1",
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=initramfs.xz",
              "init_on_alloc=1",
              "slab_nomerge",
              "pti=on",
              "console=tty0",
              "console=ttyS0",
              "printk.devkmsg=on",
              "talos.platform=metal",
              "talos.config=http://192.168.3.100:8080/assets/wr1.yaml"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "wr1",
            "initrd": [
              "/assets/initramfs.xz"
            ],
            "kernel": "/assets/vmlinuz",
            "name": "wr1",
            "raw_ignition": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "wr2",
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=initramfs.xz",
              "init_on_alloc=1",
              "slab_nomerge",
              "pti=on",
              "console=tty0",
              "console=ttyS0",
              "printk.devkmsg=on",
              "talos.platform=metal",
              "talos.config=http://192.168.3.100:8080/assets/wr2.yaml"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "wr2",
            "initrd": [
              "/assets/initramfs.xz"
            ],
            "kernel": "/assets/vmlinuz",
            "name": "wr2",
            "raw_ignition": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "wr3",
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=initramfs.xz",
              "init_on_alloc=1",
              "slab_nomerge",
              "pti=on",
              "console=tty0",
              "console=ttyS0",
              "printk.devkmsg=on",
              "talos.platform=metal",
              "talos.config=http://192.168.3.100:8080/assets/wr3.yaml"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "wr3",
            "initrd": [
              "/assets/initramfs.xz"
            ],
            "kernel": "/assets/vmlinuz",
            "name": "wr3",
            "raw_ignition": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_vm_qemu",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/telmate/proxmox\"]",
      "instances": [
        {
          "index_key": "cp1",
          "schema_version": 0,
          "attributes": {
            "additional_wait": 5,
            "agent": 0,
            "args": "",
            "automatic_reboot": true,
            "balloon": 0,
            "bios": "seabios",
            "boot": "order=virtio0;net0",
            "bootdisk": "",
            "bridge": null,
            "ci_wait": null,
            "cicustom": "",
            "cipassword": "",
            "ciuser": "",
            "clone": null,
            "clone_wait": 10,
            "cloudinit_cdrom_storage": null,
            "cores": 3,
            "cpu": "host",
            "default_ipv4_address": null,
            "define_connection_info": true,
            "desc": "",
            "disk": [
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-101-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 0,
                "ssd": 0,
                "storage": "local-lvm",
                "storage_type": "lvmthin",
                "type": "virtio",
                "volume": "local-lvm:vm-101-disk-0"
              }
            ],
            "disk_gb": null,
            "force_create": false,
            "force_recreate_on_change_of": null,
            "full_clone": true,
            "guest_agent_ready_timeout": 100,
            "hagroup": "",
            "hastate": "",
            "hostpci": [],
            "hotplug": "network,disk,usb",
            "id": "pve/qemu/101",
            "ipconfig0": "",
            "ipconfig1": "",
            "ipconfig10": "",
            "ipconfig11": "",
            "ipconfig12": "",
            "ipconfig13": "",
            "ipconfig14": "",
            "ipconfig15": "",
            "ipconfig2": "",
            "ipconfig3": "",
            "ipconfig4": "",
            "ipconfig5": "",
            "ipconfig6": "",
            "ipconfig7": "",
            "ipconfig8": "",
            "ipconfig9": "",
            "iso": null,
            "kvm": true,
            "mac": null,
            "machine": "",
            "memory": 6144,
            "name": "cp1",
            "nameserver": "",
            "network": [
              {
                "bridge": "vmbr0",
                "firewall": false,
                "link_down": false,
                "macaddr": "12:8d:a7:33:cc:e4",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate": 0,
                "tag": -1
              }
            ],
            "nic": null,
            "numa": false,
            "onboot": true,
            "oncreate": true,
            "os_network_config": null,
            "os_type": null,
            "pool": "",
            "preprovision": true,
            "pxe": true,
            "qemu_os": "l26",
            "reboot_required": false,
            "scsihw": "virtio-scsi-pci",
            "searchdomain": "",
            "serial": [],
            "sockets": 1,
            "ssh_forward_ip": null,
            "ssh_host": null,
            "ssh_port": null,
            "ssh_private_key": null,
            "ssh_user": null,
            "sshkeys": "",
            "startup": "",
            "storage": null,
            "storage_type": null,
            "tablet": true,
            "tags": "",
            "target_node": "pve",
            "timeouts": null,
            "unused_disk": [],
            "usb": [],
            "vcpus": 0,
            "vga": [],
            "vlan": -1,
            "vmid": 101
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        },
        {
          "index_key": "cp2",
          "schema_version": 0,
          "attributes": {
            "additional_wait": 5,
            "agent": 0,
            "args": "",
            "automatic_reboot": true,
            "balloon": 0,
            "bios": "seabios",
            "boot": "order=virtio0;net0",
            "bootdisk": "",
            "bridge": null,
            "ci_wait": null,
            "cicustom": "",
            "cipassword": "",
            "ciuser": "",
            "clone": null,
            "clone_wait": 10,
            "cloudinit_cdrom_storage": null,
            "cores": 3,
            "cpu": "host",
            "default_ipv4_address": null,
            "define_connection_info": true,
            "desc": "",
            "disk": [
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-102-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 0,
                "ssd": 0,
                "storage": "local-lvm",
                "storage_type": "lvmthin",
                "type": "virtio",
                "volume": "local-lvm:vm-102-disk-0"
              }
            ],
            "disk_gb": null,
            "force_create": false,
            "force_recreate_on_change_of": null,
            "full_clone": true,
            "guest_agent_ready_timeout": 100,
            "hagroup": "",
            "hastate": "",
            "hostpci": [],
            "hotplug": "network,disk,usb",
            "id": "pve/qemu/102",
            "ipconfig0": "",
            "ipconfig1": "",
            "ipconfig10": "",
            "ipconfig11": "",
            "ipconfig12": "",
            "ipconfig13": "",
            "ipconfig14": "",
            "ipconfig15": "",
            "ipconfig2": "",
            "ipconfig3": "",
            "ipconfig4": "",
            "ipconfig5": "",
            "ipconfig6": "",
            "ipconfig7": "",
            "ipconfig8": "",
            "ipconfig9": "",
            "iso": null,
            "kvm": true,
            "mac": null,
            "machine": "",
            "memory": 6144,
            "name": "cp2",
            "nameserver": "",
            "network": [
              {
                "bridge": "vmbr0",
                "firewall": false,
                "link_down": false,
                "macaddr": "12:93:4b:39:8b:e7",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate": 0,
                "tag": -1
              }
            ],
            "nic": null,
            "numa": false,
            "onboot": true,
            "oncreate": true,
            "os_network_config": null,
            "os_type": null,
            "pool": "",
            "preprovision": true,
            "pxe": true,
            "qemu_os": "l26",
            "reboot_required": false,
            "scsihw": "virtio-scsi-pci",
            "searchdomain": "",
            "serial": [],
            "sockets": 1,
            "ssh_forward_ip": null,
            "ssh_host": null,
            "ssh_port": null,
            "ssh_private_key": null,
            "ssh_user": null,
            "sshkeys": "",
            "startup": "",
            "storage": null,
            "storage_type": null,
            "tablet": true,
            "tags": "",
            "target_node": "pve",
            "timeouts": null,
            "unused_disk": [],
            "usb": [],
            "vcpus": 0,
            "vga": [],
            "vlan": -1,
            "vmid": 102
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        },
        {
          "index_key": "cp3",
          "schema_version": 0,
          "attributes": {
            "additional_wait": 5,
            "agent": 0,
            "args": "",
            "automatic_reboot": true,
            "balloon": 0,
            "bios": "seabios",
            "boot": "order=virtio0;net0",
            "bootdisk": "",
            "bridge": null,
            "ci_wait": null,
            "cicustom": "",
            "cipassword": "",
            "ciuser": "",
            "clone": null,
            "clone_wait": 10,
            "cloudinit_cdrom_storage": null,
            "cores": 3,
            "cpu": "host",
            "default_ipv4_address": null,
            "define_connection_info": true,
            "desc": "",
            "disk": [
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-103-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 0,
                "ssd": 0,
                "storage": "local-lvm",
                "storage_type": "lvmthin",
                "type": "virtio",
                "volume": "local-lvm:vm-103-disk-0"
              }
            ],
            "disk_gb": null,
            "force_create": false,
            "force_recreate_on_change_of": null,
            "full_clone": true,
            "guest_agent_ready_timeout": 100,
            "hagroup": "",
            "hastate": "",
            "hostpci": [],
            "hotplug": "network,disk,usb",
            "id": "pve/qemu/103",
            "ipconfig0": "",
            "ipconfig1": "",
            "ipconfig10": "",
            "ipconfig11": "",
            "ipconfig12": "",
            "ipconfig13": "",
            "ipconfig14": "",
            "ipconfig15": "",
            "ipconfig2": "",
            "ipconfig3": "",
            "ipconfig4": "",
            "ipconfig5": "",
            "ipconfig6": "",
            "ipconfig7": "",
            "ipconfig8": "",
            "ipconfig9": "",
            "iso": null,
            "kvm": true,
            "mac": null,
            "machine": "",
            "memory": 6144,
            "name": "cp3",
            "nameserver": "",
            "network": [
              {
                "bridge": "vmbr0",
                "firewall": false,
                "link_down": false,
                "macaddr": "12:c2:e1:db:62:03",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate": 0,
                "tag": -1
              }
            ],
            "nic": null,
            "numa": false,
            "onboot": true,
            "oncreate": true,
            "os_network_config": null,
            "os_type": null,
            "pool": "",
            "preprovision": true,
            "pxe": true,
            "qemu_os": "l26",
            "reboot_required": false,
            "scsihw": "virtio-scsi-pci",
            "searchdomain": "",
            "serial": [],
            "sockets": 1,
            "ssh_forward_ip": null,
            "ssh_host": null,
            "ssh_port": null,
            "ssh_private_key": null,
            "ssh_user": null,
            "sshkeys": "",
            "startup": "",
            "storage": null,
            "storage_type": null,
            "tablet": true,
            "tags": "",
            "target_node": "pve",
            "timeouts": null,
            "unused_disk": [],
            "usb": [],
            "vcpus": 0,
            "vga": [],
            "vlan": -1,
            "vmid": 103
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "proxmox_vm_qemu",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/telmate/proxmox\"]",
      "instances": [
        {
          "index_key": "wr1",
          "schema_version": 0,
          "attributes": {
            "additional_wait": 5,
            "agent": 0,
            "args": "",
            "automatic_reboot": true,
            "balloon": 0,
            "bios": "seabios",
            "boot": "order=virtio0;net0",
            "bootdisk": "",
            "bridge": null,
            "ci_wait": null,
            "cicustom": "",
            "cipassword": "",
            "ciuser": "",
            "clone": null,
            "clone_wait": 10,
            "cloudinit_cdrom_storage": null,
            "cores": 8,
            "cpu": "host",
            "default_ipv4_address": null,
            "define_connection_info": true,
            "desc": "",
            "disk": [
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-104-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 0,
                "ssd": 0,
                "storage": "local-lvm",
                "storage_type": "lvmthin",
                "type": "virtio",
                "volume": "local-lvm:vm-104-disk-0"
              },
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-104-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 1,
                "ssd": 0,
                "storage": "nvg1",
                "storage_type": "lvm",
                "type": "virtio",
                "volume": "nvg1:vm-104-disk-0"
              },
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-104-disk-1",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "128G",
                "slot": 2,
                "ssd": 0,
                "storage": "nvg1",
                "storage_type": "lvm",
                "type": "virtio",
                "volume": "nvg1:vm-104-disk-1"
              }
            ],
            "disk_gb": null,
            "force_create": false,
            "force_recreate_on_change_of": null,
            "full_clone": true,
            "guest_agent_ready_timeout": 100,
            "hagroup": "",
            "hastate": "",
            "hostpci": [],
            "hotplug": "network,disk,usb",
            "id": "pve/qemu/104",
            "ipconfig0": "",
            "ipconfig1": "",
            "ipconfig10": "",
            "ipconfig11": "",
            "ipconfig12": "",
            "ipconfig13": "",
            "ipconfig14": "",
            "ipconfig15": "",
            "ipconfig2": "",
            "ipconfig3": "",
            "ipconfig4": "",
            "ipconfig5": "",
            "ipconfig6": "",
            "ipconfig7": "",
            "ipconfig8": "",
            "ipconfig9": "",
            "iso": null,
            "kvm": true,
            "mac": null,
            "machine": "",
            "memory": 16384,
            "name": "wr1",
            "nameserver": "",
            "network": [
              {
                "bridge": "vmbr0",
                "firewall": false,
                "link_down": false,
                "macaddr": "12:f4:89:89:0a:34",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate": 0,
                "tag": -1
              }
            ],
            "nic": null,
            "numa": false,
            "onboot": true,
            "oncreate": true,
            "os_network_config": null,
            "os_type": null,
            "pool": "",
            "preprovision": true,
            "pxe": true,
            "qemu_os": "l26",
            "reboot_required": false,
            "scsihw": "virtio-scsi-pci",
            "searchdomain": "",
            "serial": [],
            "sockets": 1,
            "ssh_forward_ip": null,
            "ssh_host": null,
            "ssh_port": null,
            "ssh_private_key": null,
            "ssh_user": null,
            "sshkeys": "",
            "startup": "",
            "storage": null,
            "storage_type": null,
            "tablet": true,
            "tags": "",
            "target_node": "pve",
            "timeouts": null,
            "unused_disk": [],
            "usb": [],
            "vcpus": 0,
            "vga": [],
            "vlan": -1,
            "vmid": 104
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        },
        {
          "index_key": "wr2",
          "schema_version": 0,
          "attributes": {
            "additional_wait": 5,
            "agent": 0,
            "args": "",
            "automatic_reboot": true,
            "balloon": 0,
            "bios": "seabios",
            "boot": "order=virtio0;net0",
            "bootdisk": "",
            "bridge": null,
            "ci_wait": null,
            "cicustom": "",
            "cipassword": "",
            "ciuser": "",
            "clone": null,
            "clone_wait": 10,
            "cloudinit_cdrom_storage": null,
            "cores": 8,
            "cpu": "host",
            "default_ipv4_address": null,
            "define_connection_info": true,
            "desc": "",
            "disk": [
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-105-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 0,
                "ssd": 0,
                "storage": "local-lvm",
                "storage_type": "lvmthin",
                "type": "virtio",
                "volume": "local-lvm:vm-105-disk-0"
              },
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-105-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 1,
                "ssd": 0,
                "storage": "nvg2",
                "storage_type": "lvm",
                "type": "virtio",
                "volume": "nvg2:vm-105-disk-0"
              },
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-105-disk-1",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "128G",
                "slot": 2,
                "ssd": 0,
                "storage": "nvg2",
                "storage_type": "lvm",
                "type": "virtio",
                "volume": "nvg2:vm-105-disk-1"
              }
            ],
            "disk_gb": null,
            "force_create": false,
            "force_recreate_on_change_of": null,
            "full_clone": true,
            "guest_agent_ready_timeout": 100,
            "hagroup": "",
            "hastate": "",
            "hostpci": [],
            "hotplug": "network,disk,usb",
            "id": "pve/qemu/105",
            "ipconfig0": "",
            "ipconfig1": "",
            "ipconfig10": "",
            "ipconfig11": "",
            "ipconfig12": "",
            "ipconfig13": "",
            "ipconfig14": "",
            "ipconfig15": "",
            "ipconfig2": "",
            "ipconfig3": "",
            "ipconfig4": "",
            "ipconfig5": "",
            "ipconfig6": "",
            "ipconfig7": "",
            "ipconfig8": "",
            "ipconfig9": "",
            "iso": null,
            "kvm": true,
            "mac": null,
            "machine": "",
            "memory": 16384,
            "name": "wr2",
            "nameserver": "",
            "network": [
              {
                "bridge": "vmbr0",
                "firewall": false,
                "link_down": false,
                "macaddr": "12:f3:66:30:06:3b",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate": 0,
                "tag": -1
              }
            ],
            "nic": null,
            "numa": false,
            "onboot": true,
            "oncreate": true,
            "os_network_config": null,
            "os_type": null,
            "pool": "",
            "preprovision": true,
            "pxe": true,
            "qemu_os": "l26",
            "reboot_required": false,
            "scsihw": "virtio-scsi-pci",
            "searchdomain": "",
            "serial": [],
            "sockets": 1,
            "ssh_forward_ip": null,
            "ssh_host": null,
            "ssh_port": null,
            "ssh_private_key": null,
            "ssh_user": null,
            "sshkeys": "",
            "startup": "",
            "storage": null,
            "storage_type": null,
            "tablet": true,
            "tags": "",
            "target_node": "pve",
            "timeouts": null,
            "unused_disk": [],
            "usb": [],
            "vcpus": 0,
            "vga": [],
            "vlan": -1,
            "vmid": 105
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        },
        {
          "index_key": "wr3",
          "schema_version": 0,
          "attributes": {
            "additional_wait": 5,
            "agent": 0,
            "args": "",
            "automatic_reboot": true,
            "balloon": 0,
            "bios": "seabios",
            "boot": "order=virtio0;net0",
            "bootdisk": "",
            "bridge": null,
            "ci_wait": null,
            "cicustom": "",
            "cipassword": "",
            "ciuser": "",
            "clone": null,
            "clone_wait": 10,
            "cloudinit_cdrom_storage": null,
            "cores": 8,
            "cpu": "host",
            "default_ipv4_address": null,
            "define_connection_info": true,
            "desc": "",
            "disk": [
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-106-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 0,
                "ssd": 0,
                "storage": "local-lvm",
                "storage_type": "lvmthin",
                "type": "virtio",
                "volume": "local-lvm:vm-106-disk-0"
              },
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-106-disk-0",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "32G",
                "slot": 1,
                "ssd": 0,
                "storage": "nvg3",
                "storage_type": "lvm",
                "type": "virtio",
                "volume": "nvg3:vm-106-disk-0"
              },
              {
                "aio": "",
                "backup": true,
                "cache": "none",
                "discard": "",
                "file": "vm-106-disk-1",
                "format": "raw",
                "iops": 0,
                "iops_max": 0,
                "iops_max_length": 0,
                "iops_rd": 0,
                "iops_rd_max": 0,
                "iops_rd_max_length": 0,
                "iops_wr": 0,
                "iops_wr_max": 0,
                "iops_wr_max_length": 0,
                "iothread": 0,
                "mbps": 0,
                "mbps_rd": 0,
                "mbps_rd_max": 0,
                "mbps_wr": 0,
                "mbps_wr_max": 0,
                "media": "",
                "replicate": 0,
                "size": "128G",
                "slot": 2,
                "ssd": 0,
                "storage": "nvg3",
                "storage_type": "lvm",
                "type": "virtio",
                "volume": "nvg3:vm-106-disk-1"
              }
            ],
            "disk_gb": null,
            "force_create": false,
            "force_recreate_on_change_of": null,
            "full_clone": true,
            "guest_agent_ready_timeout": 100,
            "hagroup": "",
            "hastate": "",
            "hostpci": [],
            "hotplug": "network,disk,usb",
            "id": "pve/qemu/106",
            "ipconfig0": "",
            "ipconfig1": "",
            "ipconfig10": "",
            "ipconfig11": "",
            "ipconfig12": "",
            "ipconfig13": "",
            "ipconfig14": "",
            "ipconfig15": "",
            "ipconfig2": "",
            "ipconfig3": "",
            "ipconfig4": "",
            "ipconfig5": "",
            "ipconfig6": "",
            "ipconfig7": "",
            "ipconfig8": "",
            "ipconfig9": "",
            "iso": null,
            "kvm": true,
            "mac": null,
            "machine": "",
            "memory": 16384,
            "name": "wr3",
            "nameserver": "",
            "network": [
              {
                "bridge": "vmbr0",
                "firewall": false,
                "link_down": false,
                "macaddr": "12:d5:67:aa:b9:5c",
                "model": "virtio",
                "mtu": 0,
                "queues": 0,
                "rate": 0,
                "tag": -1
              }
            ],
            "nic": null,
            "numa": false,
            "onboot": true,
            "oncreate": true,
            "os_network_config": null,
            "os_type": null,
            "pool": "",
            "preprovision": true,
            "pxe": true,
            "qemu_os": "l26",
            "reboot_required": false,
            "scsihw": "virtio-scsi-pci",
            "searchdomain": "",
            "serial": [],
            "sockets": 1,
            "ssh_forward_ip": null,
            "ssh_host": null,
            "ssh_port": null,
            "ssh_private_key": null,
            "ssh_user": null,
            "sshkeys": "",
            "startup": "",
            "storage": null,
            "storage_type": null,
            "tablet": true,
            "tags": "",
            "target_node": "pve",
            "timeouts": null,
            "unused_disk": [],
            "usb": [],
            "vcpus": 0,
            "vga": [],
            "vlan": -1,
            "vmid": 106
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWZhdWx0IjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": []
}
