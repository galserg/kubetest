---
bases:
  - envs/environments.yaml

---
releases:
  - name: po
    namespace: monitoring
    chart: prometheus-community/kube-prometheus-stack
    version: 40.1.0
    values:
      - alertmanager:
          config:
            global:
              resolve_timeout: 5m
              slack_api_url: {{ .Values.monitoring.alertmanager.slack_api_url }}
            route:
              group_by: [job, alertname, app]
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 1h
              receiver: 'null'
              routes:
                - match:
                    alertname: Watchdog
                  receiver: 'null'
                - match:
                    severity: "critical"
                  receiver: 'slack-notifications'
                - match:
                    severity: "application"
                  receiver: 'slack-application'
            receivers:
              - name: 'null'
              - name: 'slack-notifications'
                slack_configs:
                  - channel: {{ .Values.monitoring.alertmanager.slack_channel }}
                    username: {{ .Values.monitoring.alertmanager.slack_username }}
                    title: "{{`{{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}`}}"
                    text: "{{`{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}`}}"
              - name: 'slack-application'
                slack_configs:
                  - channel: {{ .Values.monitoring.alertmanager.slack_channel }}
                    username: {{ .Values.monitoring.alertmanager.slack_username }}
                    title: "{{`{{ range .Alerts }}{{ .Annotations.summary }}\n{{ end }}`}}"
                    text: "{{`{{ range .Alerts }}{{ .Annotations.description }}\n{{ end }}`}}"
          ingress:
            enabled: true
            ingressClassName: second
            hosts:
              - alertmanager.{{ .Values.nginx.domain.private }}
            paths:
              - /
            pathType: ImplementationSpecific
        grafana:
          adminPassword: {{ .Values.monitoring.grafana.adminPassword }}
          ingress:
            enabled: true
            ingressClassName: second
            hosts:
              - grafana.{{ .Values.nginx.domain.private }}
            paths:
              - /
            pathType: ImplementationSpecific
          sidecar:
            dashboards:
              enabled: true
              label: grafana_dashboard
            datasources:
              enabled: true
              defaultDatasourceEnabled: true
          additionalDataSources:
            - name: loki
              access: proxy
              type: loki
              url: http://lk-loki:3100
              jsonData:
                maxLines: 5000
              isDefault: "false"
        kubeApiServer:
          enabled: true
        kubelet:
          serviceMonitor:
            resource: false
        kubeControllerManager:
          enabled: false
        coreDns:
          enabled: true
        kubeDns:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: true
        kubeStateMetrics:
          enabled: true
        nodeExporter:
          enabled: true

        prometheus-node-exporter:
          namespaceOverride: ""
          service:
            type: ClusterIP
            port: 9200
            targetPort: 9200
            nodePort:
            portName: metrics
            listenOnAllInterfaces: true
            annotations:
              prometheus.io/scrape: "true"

        prometheus:
          ingress:
            enabled: true
            ingressClassName: second
            hosts:
              - prometheus.{{ .Values.nginx.domain.private }}
            paths:
              - /
            pathType: ImplementationSpecific
          prometheusSpec:
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            retention: {{ .Values.monitoring.prometheus.retention }}
            retentionSize: {{ .Values.monitoring.prometheus.retentionSize }}

