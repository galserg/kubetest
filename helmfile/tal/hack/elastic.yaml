---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: es
spec:
  version: 8.8.2
  volumeClaimDeletePolicy: DeleteOnScaledownOnly
  nodeSets:
  - name: default
    count: 3
    config:
      node.store.allow_mmap: false
    podTemplate:
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    elasticsearch.k8s.elastic.co/cluster-name: es
                topologyKey: kubernetes.io/hostname
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: mayastor-3

---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
spec:
  version: 8.8.2
  count: 1
  elasticsearchRef:
    name: es
    namespace: elastic-system
  http:
    tls:
      selfSignedCertificate:
        disabled: true
  podTemplate:
    spec:
      containers:
      - name: kibana
        env:
          - name: NODE_OPTIONS
            value: "--max-old-space-size=2048"
        resources:
          requests:
            memory: 1Gi
            cpu: 0.5
          limits:
            memory: 2.5Gi
            cpu: 2

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: kibana.test.home
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: kibana-kb-http
                port:
                  name: http

---
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: es
spec:
  type: filebeat
  version: 8.8.2
  elasticsearchRef:
    name: es
  kibanaRef:
    name: kibana
  config:
    filebeat.inputs:
    - type: tcp
      max_message_size: 10MiB
      host: "0.0.0.0:9000"

  daemonSet:
    podTemplate:
      spec:
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        securityContext:
          runAsUser: 0
        containers:
        - name: filebeat
          ports:
            - name: tcp
              containerPort: 9000
              protocol: TCP
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers

---
apiVersion: v1
kind: Service
metadata:
  name: filebeat-tcp
spec:
  type: ClusterIP
  ports:
    - name: tcp
      protocol: TCP
      port: 9000
      targetPort: 9000
  selector:
    beat.k8s.elastic.co/name: es
    common.k8s.elastic.co/type: beat